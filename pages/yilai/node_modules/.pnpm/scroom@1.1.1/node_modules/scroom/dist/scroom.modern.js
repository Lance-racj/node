import e from"emittery";import t from"resize-observer-polyfill";import n from"randomcolor";function i(e,t,n=1){if(n<=0)return[e];const i=Array(Math.ceil((t-e)/n)).fill(e).map((e,t)=>e+t*n);return i[i.length-1]!==t&&i.push(t),i}function o(e,t,n){return Math.abs(t-e)<Math.abs(n-e)?t:n}function r(n){const{target:r,offset:s=.5,threshold:d=4,direction:c="vertical"}=n,l=new e;let p=a(),h=new t(g);function a(){let e,t;if("vertical"===c)e=`${-s*window.innerHeight}px 0px ${(s-1)*window.innerHeight+r.clientHeight}px 0px`,t=d/r.clientHeight;else{const n=-s*window.innerWidth;e=`0px ${(s-1)*window.innerWidth+r.clientWidth}px 0px ${n}px`,t=d/r.clientWidth}let n=!1,p=-1,h=!0;return setTimeout(()=>{h=!1}),new IntersectionObserver(([e])=>{const{boundingClientRect:t,intersectionRect:i,isIntersecting:d}=e;let a=!1,g=0;"vertical"===c?(a=t.top<i.top&&d,g=1-i.height/t.height):"horizontal"===c&&(a=t.left<i.left&&d,g=1-i.width/t.width);const f=!n&&a,u=n&&!a;n=a;const x=e=>{p!==e&&l.emit("progress",{target:r,progress:e}),p=e};f&&(l.emit("enter",{target:r}),h||x(o(g,0,1))),a&&p!==g&&x(g),u&&(l.emit("leave",{target:r}),x(o(g,0,1))),l.emit("debug",{target:r,progress:g,offset:s,intersection:e,direction:c,action:f?"enter":u?"leave":a?"progress":null})},{rootMargin:e,threshold:i(0,1,t)})}function g(){p.disconnect(),p=a(),p.observe(r)}return window.addEventListener("resize",g),h.observe(r),{target:r,observer:p,destroy:function(){p.disconnect(),h.disconnect(),l.clearListeners(),window.removeEventListener("resize",g)},on:l.on.bind(l),once:l.once.bind(l),off:l.off.bind(l)}}function s(e,t){const i=n({luminosity:"dark",format:"rgbArray"}),o=`rgb(${i[0]},${i[1]},${i[2]})`,r=`rgba(${i[0]},${i[1]},${i[2]},0.1)`,s=document.createElement("div"),d=document.createElement("div");function c(e){const{offset:n,action:i,progress:r,direction:c,intersection:l}=e,p="enter"===i||"progress"===i?"block":"none";s.style.cssText=`\n      position: fixed;\n      z-index: 99999;\n      pointer-events: none;\n      display: ${p};\n      ${"vertical"===c?`\n              left: 0;\n              width: 100%;\n              bottom: ${100*(1-n)}%;\n              color: ${o};\n              border-bottom: 1px dashed ${o};\n              padding: 5px 20px;\n            `:`\n              top: 0;\n              height: 100%;\n              right: ${100*(1-n)}%;\n              color: ${o};\n              border-right: 1px dashed ${o};\n              padding: 20px 5px;\n            `}\n    `,d.style.display=p;const h=l.boundingClientRect;d.style.top=h.top+"px",d.style.left=h.left+"px",d.style.width=h.width+"px",d.style.height=h.height+"px",p&&(s.innerText=`${t?`[${t}]`:""}  ${(100*r).toFixed(3)}%`)}function l(){const t=e.target.getBoundingClientRect();d.style.top=t.top+"px",d.style.left=t.left+"px",d.style.width=t.width+"px",d.style.height=t.height+"px"}return d.style.cssText=`\n      position: fixed;\n      z-index: 100000;\n      background: ${r};\n      outline: 1px solid ${o};\n      pointer-events: none;\n    `,document.body.appendChild(s),document.body.appendChild(d),e.on("debug",c),window.addEventListener("resize",l,!1),window.addEventListener("scroll",l,!1),l(),{destroy:function(){e.off("debug",c),window.removeEventListener("resize",l,!1),window.removeEventListener("scroll",l,!1),s.remove(),d.remove()}}}export{r as createScroom,s as debug};
//# sourceMappingURL=scroom.modern.js.map
