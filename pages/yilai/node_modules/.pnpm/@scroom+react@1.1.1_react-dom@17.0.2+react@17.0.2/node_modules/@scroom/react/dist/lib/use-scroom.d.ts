import { RefObject } from "react";
import { ScroomInstance, CreateScroomOptions, ScroomEventMap } from "scroom";
export declare type UseScroomOptions<T extends Element> = Omit<CreateScroomOptions<T>, "target"> & {
    onProgress?: (e: ScroomEventMap<T>["progress"]) => void;
    onEnter?: (e: ScroomEventMap<T>["enter"]) => void;
    onLeave?: (e: ScroomEventMap<T>["leave"]) => void;
    onDebug?: (e: ScroomEventMap<T>["debug"]) => void;
};
export declare function useScroom<T extends Element>(ref: RefObject<T>, options?: UseScroomOptions<T>): ScroomInstance<T> | null;
